Module("mpd")

Function("XMpdToggleControls") {
    [!UserState] SetStyle "visible"
    [UserState] SetStyle "hidden"
    [!UserState] UserState "on"
    [UserState] UserState "off"
}

Function("XMpdToggle") {
    Function "XMpdPlayer", "XMpdToggleControls"
    [!UserState] SetValue "pan-end"
    [UserState] SetValue "pan-start"
    [!UserState] UserState "on"
    [UserState] UserState "off"
}

PopUp "XMpdWindow" {
  style = If(!Ident(mpd),"hidden","XMpdPopup")
  css = "* { -GtkWidget-direction: bottom; }"
  trigger = "mpd"
  label {
    value = "<b>"+Mpd("title")+"</b>";
    trigger = "mpd"
    style = "mpd_title"
    trigger = "mpd"
  }
  label {
    value = Mpd("album");
    trigger = "mpd"
    style = "mpd_album"
    trigger = "mpd"
  }
  label {
    value = Mpd("artist");
    trigger = "mpd"
    style = "mpd_artist"
    trigger = "mpd"
  }
  scale {
    value = Val(Mpd("elapsed"))/Val(Mpd("length"))/1000;
    style = "mpd_progress"
    trigger = "mpd-progress"
  }
  grid "XMpdPlayer" {
    css = "* { -GtkWidget-direction: right; -GtkWidget-halign: center; -GtkWidget-hexpand: true; }"
    image {
      value = "media-playlist-repeat"
      action = MpdCommand "repeat toggle"
      style = If(val(mpd("repeat")),"mpd_icon_red","mpd_icon")
      trigger = "mpd"
    }
    image {
      value = "media-playlist-shuffle"
      action = MpdCommand "random toggle"
      style = If(val(mpd("random")),"mpd_icon_red","mpd_icon")
      trigger = "mpd"
    }
    image {
      value = "media-seek-backward"
      action = MpdCommand "prev"
      style = "mpd_icon"
    }
    image {
      value = "media-playback-start"
      action = MpdCommand "play"
      style = If(mpd("state")="play","mpd_icon_red","mpd_icon")
      trigger = "mpd"
    }
    image {
      value = "media-playback-pause"
      action = MpdCommand "pause"
      style = If(mpd("state")="pause","mpd_icon_red","mpd_icon")
      trigger = "mpd"
    }
    image {
      value = "media-playback-stop"
      action = MpdCommand "stop"
      style = If(mpd("state")="stop","mpd_icon_red","mpd_icon")
      trigger = "mpd"
    }
    image {
      value = "media-seek-forward"
      action = MpdCommand "next"
      style = "mpd_icon"
    }
  }
}

layout {
  style = "module"
  button {
    value = "icons/misc/music-player"
    action = PopUp "XMpdWindow"
    style = If(!Ident(mpd),"hidden","module")
  }
}

#CSS
window#XMpdWindow {
  background-color: rgba(0,0,0,0);
}

grid#XMpdPopup {
  margin: 10px;
  border-radius: 10px;
  border-image: none;
  border-width: 1px;
  border-style: solid;
  padding: 10px;
  background-color: @theme_bg_color;
}

image#mpd_icon {
  -GtkWidget-hexpand: false;
  -GtkWidget-vexpand: false;
  min-width: 16px;
  min-height: 16px;
  padding: 4px;
  color: @theme_fg_color;
}

image#mpd_icon_red {
  -GtkWidget-hexpand: false;
  -GtkWidget-vexpand: false;
  min-width: 16px;
  min-height: 16px;
  padding: 4px;
  color: red;
}

label#mpd_title,
label#mpd_album,
label#mpd_artist {
  padding-left: 4px;
  padding-right: 4px;
  -GtkWidget-align: 0.5;
  -GtkWidget-halign: center;
  color: @theme_text_color;
}

#mpd_progress {
  margin-top: 3px;
  margin-bottom: 3px;
  -GtkWidget-halign: center;
}

#mpd_progress progress {
  min-height: 8px;
}

#mpd_progress trough {
  min-height: 8px;
}
